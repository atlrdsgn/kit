{"version":3,"file":"index.esm.js","sources":["../src/lib/provider/context.ts","../src/lib/provider/provider.tsx","../node_modules/clsx/dist/clsx.mjs","../../../node_modules/@vanilla-extract/css/functionSerializer/dist/vanilla-extract-css-functionSerializer.browser.esm.js","../../../node_modules/@vanilla-extract/css/recipe/dist/vanilla-extract-css-recipe.browser.esm.js","../../../node_modules/@vanilla-extract/sprinkles/createUtils/dist/vanilla-extract-sprinkles-createUtils.esm.js","../../../node_modules/@vanilla-extract/sprinkles/dist/createSprinkles-c8550e00.esm.js","../../../node_modules/@vanilla-extract/sprinkles/createRuntimeSprinkles/dist/vanilla-extract-sprinkles-createRuntimeSprinkles.esm.js","../src/lib/css/atoms.ts","../src/lib/css/constants.ts","../src/lib/css/mode.ts","../../../node_modules/@vanilla-extract/recipes/createRuntimeFn/dist/vanilla-extract-recipes-createRuntimeFn.esm.js","../src/kit/banner/banner.tsx","../src/kit/button/button.tsx","../src/kit/canvas/canvas.tsx","../src/kit/chip/chip.tsx","../src/kit/container/container.tsx","../src/kit/flex/flex.tsx","../../../node_modules/@vanilla-extract/private/dist/vanilla-extract-private.esm.js","../../../node_modules/@vanilla-extract/dynamic/dist/vanilla-extract-dynamic.esm.js","../src/kit/rect/rect.tsx","../src/kit/grid/grid.tsx","../src/kit/heading/heading.tsx","../src/kit/popover/popover.tsx","../src/kit/section/section.tsx","../src/kit/space/space.tsx","../src/kit/stack/stack.tsx","../src/kit/switch/switch.tsx","../src/kit/text/text.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport type KitMode = 'light' | 'dark';\n\nexport type KitContextValue = {\n  theme: KitMode;\n  toggleTheme: any;\n};\n\nexport const KitContext = createContext<KitContextValue>({\n  theme: 'light',\n  toggleTheme: null,\n});\n\nexport const useTheme = (): KitContextValue => {\n  const context = useContext(KitContext);\n  if (!context)\n    throw new Error(\n      'AtelierÂ® Kit components must be used within [KitProvider]',\n    );\n  return context;\n};\n","import React, { useState } from 'react';\n\nimport { type KitMode, KitContext } from './context';\nimport { themes } from '../theme/kit.css';\n\nexport interface KitProviderProps {\n  children: React.ReactNode;\n  defaultTheme?: KitMode;\n}\n\nexport const KitProvider: React.FC<KitProviderProps> = ({\n  children,\n}: React.PropsWithChildren<KitProviderProps>) => {\n  const [kitTheme, setTheme] = useState<KitMode>('light');\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\n  };\n\n  const Mode = kitTheme === 'light' ? themes.dark : themes.light;\n\n  return (\n    <KitContext.Provider value={{ theme: kitTheme, toggleTheme }}>\n      <div className={`${themes.base} ${Mode}`}>{children}</div>\n    </KitContext.Provider>\n  );\n};\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","function addFunctionSerializer(target, recipe) {\n  // TODO: Update to \"__function_serializer__\" in future.\n  // __recipe__ is the backwards compatible name\n  Object.defineProperty(target, '__recipe__', {\n    value: recipe,\n    writable: false\n  });\n  return target;\n}\n\nexport { addFunctionSerializer };\n","import { addFunctionSerializer } from '../../functionSerializer/dist/vanilla-extract-css-functionSerializer.browser.esm.js';\n\n/**\n * @deprecated Use 'addFunctionSerializer' from '@vanilla-extract/css/functionSerializer'\n */\nvar addRecipe = addFunctionSerializer;\n\nexport { addRecipe };\n","import { addRecipe } from '@vanilla-extract/css/recipe';\n\nfunction createNormalizeValueFn(properties) {\n  var {\n    conditions\n  } = properties;\n  if (!conditions) {\n    throw new Error('Styles have no conditions');\n  }\n  function normalizeValue(value) {\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n      if (!conditions.defaultCondition) {\n        throw new Error('No default condition');\n      }\n      return {\n        [conditions.defaultCondition]: value\n      };\n    }\n    if (Array.isArray(value)) {\n      if (!('responsiveArray' in conditions)) {\n        throw new Error('Responsive arrays are not supported');\n      }\n      var returnValue = {};\n      for (var index in conditions.responsiveArray) {\n        if (value[index] != null) {\n          returnValue[conditions.responsiveArray[index]] = value[index];\n        }\n      }\n      return returnValue;\n    }\n    return value;\n  }\n  return addRecipe(normalizeValue, {\n    importPath: '@vanilla-extract/sprinkles/createUtils',\n    importName: 'createNormalizeValueFn',\n    args: [{\n      conditions: properties.conditions\n    }]\n  });\n}\nfunction createMapValueFn(properties) {\n  var {\n    conditions\n  } = properties;\n  if (!conditions) {\n    throw new Error('Styles have no conditions');\n  }\n  var normalizeValue = createNormalizeValueFn(properties);\n  function mapValue(value, mapFn) {\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n      if (!conditions.defaultCondition) {\n        throw new Error('No default condition');\n      }\n      return mapFn(value, conditions.defaultCondition);\n    }\n    var normalizedObject = Array.isArray(value) ? normalizeValue(value) : value;\n    var mappedObject = {};\n    for (var _key in normalizedObject) {\n      if (normalizedObject[_key] != null) {\n        mappedObject[_key] = mapFn(normalizedObject[_key], _key);\n      }\n    }\n    return mappedObject;\n  }\n  return addRecipe(mapValue, {\n    importPath: '@vanilla-extract/sprinkles/createUtils',\n    importName: 'createMapValueFn',\n    args: [{\n      conditions: properties.conditions\n    }]\n  });\n}\n\nexport { createMapValueFn, createNormalizeValueFn };\n","function _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n\nvar createSprinkles = composeStyles => function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  var sprinklesStyles = Object.assign({}, ...args.map(a => a.styles));\n  var sprinklesKeys = Object.keys(sprinklesStyles);\n  var shorthandNames = sprinklesKeys.filter(property => 'mappings' in sprinklesStyles[property]);\n  var sprinklesFn = props => {\n    var classNames = [];\n    var shorthands = {};\n    var nonShorthands = _objectSpread2({}, props);\n    var hasShorthands = false;\n    for (var shorthand of shorthandNames) {\n      var value = props[shorthand];\n      if (value != null) {\n        var sprinkle = sprinklesStyles[shorthand];\n        hasShorthands = true;\n        for (var propMapping of sprinkle.mappings) {\n          shorthands[propMapping] = value;\n          if (nonShorthands[propMapping] == null) {\n            delete nonShorthands[propMapping];\n          }\n        }\n      }\n    }\n    var finalProps = hasShorthands ? _objectSpread2(_objectSpread2({}, shorthands), nonShorthands) : props;\n    var _loop = function _loop() {\n      var propValue = finalProps[prop];\n      var sprinkle = sprinklesStyles[prop];\n      try {\n        if (sprinkle.mappings) {\n          // Skip shorthands\n          return \"continue\";\n        }\n        if (typeof propValue === 'string' || typeof propValue === 'number') {\n          if (process.env.NODE_ENV !== 'production') {\n            if (!sprinkle.values[propValue].defaultClass) {\n              throw new Error();\n            }\n          }\n          classNames.push(sprinkle.values[propValue].defaultClass);\n        } else if (Array.isArray(propValue)) {\n          for (var responsiveIndex = 0; responsiveIndex < propValue.length; responsiveIndex++) {\n            var responsiveValue = propValue[responsiveIndex];\n            if (responsiveValue != null) {\n              var conditionName = sprinkle.responsiveArray[responsiveIndex];\n              if (process.env.NODE_ENV !== 'production') {\n                if (!sprinkle.values[responsiveValue].conditions[conditionName]) {\n                  throw new Error();\n                }\n              }\n              classNames.push(sprinkle.values[responsiveValue].conditions[conditionName]);\n            }\n          }\n        } else {\n          for (var _conditionName in propValue) {\n            // Conditional style\n            var _value = propValue[_conditionName];\n            if (_value != null) {\n              if (process.env.NODE_ENV !== 'production') {\n                if (!sprinkle.values[_value].conditions[_conditionName]) {\n                  throw new Error();\n                }\n              }\n              classNames.push(sprinkle.values[_value].conditions[_conditionName]);\n            }\n          }\n        }\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          class SprinklesError extends Error {\n            constructor(message) {\n              super(message);\n              this.name = 'SprinklesError';\n            }\n          }\n          var format = v => typeof v === 'string' ? \"\\\"\".concat(v, \"\\\"\") : v;\n          var invalidPropValue = (prop, value, possibleValues) => {\n            throw new SprinklesError(\"\\\"\".concat(prop, \"\\\" has no value \").concat(format(value), \". Possible values are \").concat(Object.keys(possibleValues).map(format).join(', ')));\n          };\n          if (!sprinkle) {\n            throw new SprinklesError(\"\\\"\".concat(prop, \"\\\" is not a valid sprinkle\"));\n          }\n          if (typeof propValue === 'string' || typeof propValue === 'number') {\n            if (!(propValue in sprinkle.values)) {\n              invalidPropValue(prop, propValue, sprinkle.values);\n            }\n            if (!sprinkle.values[propValue].defaultClass) {\n              throw new SprinklesError(\"\\\"\".concat(prop, \"\\\" has no default condition. You must specify which conditions to target explicitly. Possible options are \").concat(Object.keys(sprinkle.values[propValue].conditions).map(format).join(', ')));\n            }\n          }\n          if (typeof propValue === 'object') {\n            if (!('conditions' in sprinkle.values[Object.keys(sprinkle.values)[0]])) {\n              throw new SprinklesError(\"\\\"\".concat(prop, \"\\\" is not a conditional property\"));\n            }\n            if (Array.isArray(propValue)) {\n              if (!('responsiveArray' in sprinkle)) {\n                throw new SprinklesError(\"\\\"\".concat(prop, \"\\\" does not support responsive arrays\"));\n              }\n              var breakpointCount = sprinkle.responsiveArray.length;\n              if (breakpointCount < propValue.length) {\n                throw new SprinklesError(\"\\\"\".concat(prop, \"\\\" only supports up to \").concat(breakpointCount, \" breakpoints. You passed \").concat(propValue.length));\n              }\n              for (var _responsiveValue of propValue) {\n                if (!sprinkle.values[_responsiveValue]) {\n                  invalidPropValue(prop, _responsiveValue, sprinkle.values);\n                }\n              }\n            } else {\n              for (var _conditionName2 in propValue) {\n                var _value2 = propValue[_conditionName2];\n                if (_value2 != null) {\n                  if (!sprinkle.values[_value2]) {\n                    invalidPropValue(prop, _value2, sprinkle.values);\n                  }\n                  if (!sprinkle.values[_value2].conditions[_conditionName2]) {\n                    throw new SprinklesError(\"\\\"\".concat(prop, \"\\\" has no condition named \").concat(format(_conditionName2), \". Possible values are \").concat(Object.keys(sprinkle.values[_value2].conditions).map(format).join(', ')));\n                  }\n                }\n              }\n            }\n          }\n        }\n        throw e;\n      }\n    };\n    for (var prop in finalProps) {\n      var _ret = _loop();\n      if (_ret === \"continue\") continue;\n    }\n    return composeStyles(classNames.join(' '));\n  };\n  return Object.assign(sprinklesFn, {\n    properties: new Set(sprinklesKeys)\n  });\n};\n\nexport { createSprinkles as c };\n","import { c as createSprinkles$1 } from '../../dist/createSprinkles-c8550e00.esm.js';\n\nvar composeStyles = classList => classList;\nvar createSprinkles = function createSprinkles() {\n  return createSprinkles$1(composeStyles)(...arguments);\n};\n\n/** @deprecated - Use `createSprinkles` */\nvar createAtomsFn = createSprinkles;\n\nexport { createAtomsFn, createSprinkles };\n","import clsx from 'clsx';\n\nimport * as styleRes from './reset.css';\nimport { type Sprinkles, sprinkles } from './sprinkles.css';\n\nexport type Atoms = Sprinkles & {\n  reset?:\n    | (styleRes.KitElement & keyof JSX.IntrinsicElements & React.ElementType)\n    | 'div';\n};\n\nexport const atoms = ({ reset, ...rest }: Atoms) => {\n  const sprinklesClasses = sprinkles(rest);\n\n  const resetClass = reset ? [styleRes.base, styleRes.element[reset]] : null;\n\n  return clsx(resetClass, sprinklesClasses);\n};\n","export const breakpoints = {\n  small: 0,\n  medium: 768,\n  large: 1200,\n  xlarge: 1600,\n} as const;\n\nexport type Breakpoint = keyof typeof breakpoints;\n\nexport const breakpointNames = Object.keys(breakpoints) as Breakpoint[];\n","import type { StyleRule } from '@vanilla-extract/css';\nimport { themes } from '../theme/kit.css';\n\nexport type CSSProps = Omit<StyleRule, 'selectors' | '@media' | '@supports'>;\n\nexport const colorModeSelectors = {\n  light: `html:not(${themes.light}) &`,\n  dark: `html${themes.dark} &`,\n};\n\nconst makeSelector = (\n  mode: keyof typeof colorModeSelectors,\n  styles?: CSSProps,\n) =>\n  !styles || Object.keys(styles).length === 0\n    ? {}\n    : {\n        [colorModeSelectors[mode]]: styles,\n      };\n\ninterface ColorMode {\n  lightMode?: CSSProps;\n  darkMode?: CSSProps;\n}\n\nexport const colorModeStyle = ({\n  lightMode,\n  darkMode,\n}: ColorMode): StyleRule => ({\n  ...(lightMode || darkMode\n    ? {\n        selectors: {\n          ...makeSelector('light', lightMode),\n          ...makeSelector('dark', darkMode),\n        },\n      }\n    : {}),\n});\n","function _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\n\nvar shouldApplyCompound = (compoundCheck, selections, defaultVariants) => {\n  for (var key of Object.keys(compoundCheck)) {\n    var _selections$key;\n    if (compoundCheck[key] !== ((_selections$key = selections[key]) !== null && _selections$key !== void 0 ? _selections$key : defaultVariants[key])) {\n      return false;\n    }\n  }\n  return true;\n};\nvar createRuntimeFn = config => {\n  var runtimeFn = options => {\n    var className = config.defaultClassName;\n    var selections = _objectSpread2(_objectSpread2({}, config.defaultVariants), options);\n    for (var variantName in selections) {\n      var _selections$variantNa;\n      var variantSelection = (_selections$variantNa = selections[variantName]) !== null && _selections$variantNa !== void 0 ? _selections$variantNa : config.defaultVariants[variantName];\n      if (variantSelection != null) {\n        var selection = variantSelection;\n        if (typeof selection === 'boolean') {\n          // @ts-expect-error\n          selection = selection === true ? 'true' : 'false';\n        }\n        var selectionClassName =\n        // @ts-expect-error\n        config.variantClassNames[variantName][selection];\n        if (selectionClassName) {\n          className += ' ' + selectionClassName;\n        }\n      }\n    }\n    for (var [compoundCheck, compoundClassName] of config.compoundVariants) {\n      if (shouldApplyCompound(compoundCheck, selections, config.defaultVariants)) {\n        className += ' ' + compoundClassName;\n      }\n    }\n    return className;\n  };\n  runtimeFn.variants = () => Object.keys(config.variantClassNames);\n  return runtimeFn;\n};\n\nexport { createRuntimeFn };\n","import React from 'react';\nimport clsx from 'clsx';\nimport * as css from './banner.css';\nimport {\n  type BannerSize,\n  type BannerVariant,\n  type BannerVariants,\n  type BannerBorderBoolean,\n} from './banner.css';\n\ninterface BaseBannerProps {\n  children: React.ReactNode;\n\n  /**\n   *\n   * className to be passed to the section.\n   */\n  className?: string;\n  size?: BannerSize;\n  variant?: BannerVariant;\n  border?: BannerBorderBoolean;\n}\n\nexport type BannerProps = BaseBannerProps &\n  BannerVariants &\n  React.HTMLAttributes<HTMLDivElement>;\n\nexport const Banner: React.FC<BannerProps> = ({\n  children,\n  className,\n  size,\n  variant,\n  border,\n  ...rest\n}) => {\n  return (\n    <div\n      {...rest}\n      className={clsx(className, css.banner({ size, variant, border }))}>\n      {children}\n    </div>\n  );\n};\n\nBanner.displayName = 'Banner';\n","import React from 'react';\nimport { button } from './button.css';\nimport { type BASE_BUTTON_PROPS } from './button.types';\nimport { type ButtonVariantProps } from './button.css';\n\ntype ButtonElementProps = BASE_BUTTON_PROPS &\n  ButtonVariantProps &\n  React.ButtonHTMLAttributes<HTMLButtonElement>;\nexport type ButtonProps = ButtonElementProps;\n\nexport const Button = ({\n  children,\n  type = 'button',\n  as = 'a',\n  onClick = () => {},\n  href,\n  target = '_self',\n  rel = 'noopener noreferrer',\n  size = 'sm',\n  variant = 'slate',\n  ...rest\n}: ButtonProps) => {\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (href) {\n      event.preventDefault();\n      window.open(href, target, rel);\n    } else {\n      event.preventDefault();\n    }\n\n    onClick(event);\n  };\n\n  return (\n    <button\n      {...rest}\n      type={type}\n      className={button({ size, variant })}\n      onClick={handleClick}>\n      {children}\n    </button>\n  );\n};\n\nButton.displayName = 'Button';\n","import React from 'react';\nimport { canvas } from './canvas.css';\nimport clsx from 'clsx';\n\ninterface CanvasProps {\n  children?: React.ReactNode;\n  className?: string;\n}\n\nexport const Canvas = React.forwardRef<HTMLDivElement, CanvasProps>(\n  ({ children, ...rest }, forwardedRef) => {\n    return (\n      <div\n        ref={forwardedRef}\n        className={clsx(canvas)}\n        {...rest}>\n        {children}\n      </div>\n    );\n  },\n);\n\nCanvas.displayName = 'Canvas';\n\nexport type { CanvasProps };\n","import React from 'react';\nimport clsx from 'clsx';\nimport { chip } from './chip.css';\nimport type { ChipVariantProps } from './chip.css';\n\nexport type ChipProps = ChipVariantProps &\n  React.HTMLAttributes<HTMLSpanElement> & { className?: string };\n\nexport const Chip: React.FC<ChipProps> = ({\n  children,\n  className,\n  size = 'sm',\n  shape = 'pill',\n  variant = 'slate',\n  ...rest\n}) => (\n  <span\n    {...rest}\n    className={clsx(className, chip({ size, shape, variant }))}>\n    {children}\n  </span>\n);\n\nChip.displayName = 'Chip';\n","import React from 'react';\nimport clsx from 'clsx';\nimport { container } from './container.css';\nimport {\n  // ..\n  type ContainerAlignment,\n  type ContainerBorder,\n  type ContainerVariantProps,\n  type ContainerWidth,\n} from './container.css';\n\nexport type ContainerProps = ContainerVariantProps &\n  React.HTMLAttributes<HTMLDivElement> & {\n    children: React.ReactNode;\n    className?: string;\n    width?: ContainerWidth;\n    align?: ContainerAlignment;\n    border?: ContainerBorder | boolean;\n  };\n\nexport const Container: React.FC<ContainerProps> = ({\n  children,\n  className,\n  width = 'max',\n  align = 'start',\n  border = false,\n  ...rest\n}) => {\n  return (\n    <div\n      {...rest}\n      className={clsx(className, container({ width, align, border }))}>\n      {children}\n    </div>\n  );\n};\n\nContainer.displayName = 'Container';\n","import React from 'react';\nimport * as css from './flex.css';\n\nimport type {\n  FlexDirectionProps,\n  FlexAlignProps,\n  FlexJustifyProps,\n  FlexGapProps,\n  // ..\n  FlexVariantProps,\n} from './flex.css';\n\ninterface BASE_FLEX_PROPS {\n  children?: React.ReactNode;\n  className?: string;\n\n  direction?: FlexDirectionProps;\n  align?: FlexAlignProps;\n  justify?: FlexJustifyProps;\n  gap?: FlexGapProps;\n}\n\ntype FlexAttributeProps = BASE_FLEX_PROPS &\n  React.HTMLAttributes<HTMLDivElement>;\nexport type FlexProps = FlexAttributeProps & FlexVariantProps;\nexport const Flex = React.forwardRef<HTMLDivElement, FlexProps>(\n  (\n    {\n      children,\n      direction = 'row',\n      align = 'center',\n      justify = 'center',\n      gap = 'sm',\n\n      ...props\n      //..\n    },\n    forwardedRef,\n  ) => {\n    return (\n      <div\n        {...props}\n        ref={forwardedRef}\n        /**\n         *\n         * @see if this produces what we want.\n         */\n        className={css.flex({ direction, align, justify, gap })}>\n        {children}\n      </div>\n    );\n  },\n);\n\nFlex.displayName = 'Flex';\n","function getVarName(variable) {\n  var matches = variable.match(/^var\\((.*)\\)$/);\n\n  if (matches) {\n    return matches[1];\n  }\n\n  return variable;\n}\n\nfunction get(obj, path) {\n  var result = obj;\n\n  for (var key of path) {\n    if (!(key in result)) {\n      throw new Error(\"Path \".concat(path.join(' -> '), \" does not exist in object\"));\n    }\n\n    result = result[key];\n  }\n\n  return result;\n}\n\nfunction walkObject(obj, fn) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var clone = obj.constructor();\n\n  for (var key in obj) {\n    var _value = obj[key];\n    var currentPath = [...path, key];\n\n    if (typeof _value === 'string' || typeof _value === 'number' || _value == null) {\n      clone[key] = fn(_value, currentPath);\n    } else if (typeof _value === 'object' && !Array.isArray(_value)) {\n      clone[key] = walkObject(_value, fn, currentPath);\n    } else {\n      console.warn(\"Skipping invalid key \\\"\".concat(currentPath.join('.'), \"\\\". Should be a string, number, null or object. Received: \\\"\").concat(Array.isArray(_value) ? 'Array' : typeof _value, \"\\\"\"));\n    }\n  }\n\n  return clone;\n}\n\nexport { get, getVarName, walkObject };\n","import { walkObject, get, getVarName } from '@vanilla-extract/private';\n\nfunction assignInlineVars(varsOrContract, tokens) {\n  var styles = {};\n\n  if (typeof tokens === 'object') {\n    var _contract = varsOrContract;\n    walkObject(tokens, (value, path) => {\n      var varName = get(_contract, path);\n      styles[getVarName(varName)] = String(value);\n    });\n  } else {\n    var _vars = varsOrContract;\n\n    for (var varName in _vars) {\n      styles[getVarName(varName)] = _vars[varName];\n    }\n  }\n\n  Object.defineProperty(styles, 'toString', {\n    value: function value() {\n      return Object.keys(this).map(key => \"\".concat(key, \":\").concat(this[key])).join(';');\n    },\n    writable: false\n  });\n  return styles;\n}\n\nfunction setVar(element, variable, value) {\n  element.style.setProperty(getVarName(variable), value);\n}\n\nfunction setElementVars(element, varsOrContract, tokens) {\n  if (typeof tokens === 'object') {\n    var _contract = varsOrContract;\n    walkObject(tokens, (value, path) => {\n      setVar(element, get(_contract, path), String(value));\n    });\n  } else {\n    var _vars = varsOrContract;\n\n    for (var varName in _vars) {\n      setVar(element, varName, _vars[varName]);\n    }\n  }\n}\n\nexport { assignInlineVars, setElementVars };\n","import React, { createElement, forwardRef } from 'react';\nimport clsx, { type ClassValue } from 'clsx';\nimport { atoms, sprinkles, type Atoms } from '../../lib/css';\n\ntype HTMLProperties = Omit<\n  React.AllHTMLAttributes<HTMLElement>,\n  'as' | 'className' | 'color' | 'height' | 'width'\n>;\n\ntype Props = Atoms &\n  HTMLProperties & {\n    as?: React.ElementType;\n    className?: ClassValue;\n    reset?: string; // Update this line\n  };\n\nexport const Rect = forwardRef<HTMLElement, Props>(\n  ({ as = 'div', className, ...props }: Props, ref) => {\n    const atomProps: Record<string, unknown> = {};\n    const nativeProps: Record<string, unknown> = {};\n\n    for (const key in props) {\n      if (sprinkles.properties.has(key as keyof Omit<Atoms, 'reset'>)) {\n        atomProps[key] = props[key as keyof typeof props];\n      } else {\n        nativeProps[key] = props[key as keyof typeof props];\n      }\n    }\n\n    const atomicClasses = atoms({\n      reset: typeof as === 'string' ? (as as Atoms['reset']) : 'div',\n\n      ...atomProps,\n    });\n\n    return createElement(as, {\n      className: clsx(atomicClasses, className),\n      ...nativeProps,\n      ref,\n    });\n  },\n);\n\nexport const Box = forwardRef<HTMLElement, Props>(\n  ({ as = 'div', className, ...props }: Props, ref) => {\n    const atomProps: Record<string, unknown> = {};\n    const nativeProps: Record<string, unknown> = {};\n\n    for (const key in props) {\n      if (sprinkles.properties.has(key as keyof Omit<Atoms, 'reset'>)) {\n        atomProps[key] = props[key as keyof typeof props];\n      } else {\n        nativeProps[key] = props[key as keyof typeof props];\n      }\n    }\n\n    const atomicClasses = atoms({\n      reset: typeof as === 'string' ? (as as Atoms['reset']) : 'div',\n\n      ...atomProps,\n    });\n\n    return createElement(as, {\n      className: clsx(atomicClasses, className),\n      ...nativeProps,\n      ref,\n    });\n  },\n);\n\nexport type DivProps = Parameters<typeof Rect>[0];\n\nRect.displayName = 'RectBox';\nBox.displayName = 'Box';\n","import React, { Children } from 'react';\nimport * as styles from './grid.css';\nimport { assignInlineVars } from '@vanilla-extract/dynamic';\nimport { Rect, type DivProps } from '../rect';\n\nexport interface GridProps extends DivProps {\n  gridItemMinWidth?: string;\n  /** TODO: Different columns API? See https://css-tricks.com/responsive-layouts-fewer-media-queries/ */\n  gridMaxRowItems?: number;\n}\n\ntype Ref = HTMLDivElement;\n\nexport const gridStyles = styles ?? {};\n\n/**\n * Grid layout with with responsive defaults, but also fully customizable with standard CSS grid properties.\n */\nexport const Grid = React.forwardRef<Ref, GridProps>(function Split(\n  {\n    children,\n    gridItemMinWidth = '300px',\n    gridMaxRowItems,\n    style = {},\n    ...props\n  },\n  ref,\n) {\n  return (\n    <Rect\n      {...props}\n      ref={ref}\n      className={`${styles.grid} ${props.className ?? ''}`}\n      style={{\n        ...style,\n        ...assignInlineVars({\n          [styles.gridItemMinWidth]: gridItemMinWidth,\n          [styles.gridMaxRowItems]:\n            (gridMaxRowItems && String(gridMaxRowItems)) ||\n            String(Children.count(children)),\n        }),\n      }}\n      flexDirection='row'>\n      {children}\n    </Rect>\n  );\n});\n\nGrid.displayName = 'Grid';\n","import React from 'react';\nimport * as CSS from './heading.css';\nimport clsx from 'clsx';\n\nimport type {\n  HeadingVariantProps,\n  //..\n  HeadingFontFamily,\n  HeadingSize,\n  HeadingWeight,\n  HeadingAlignment,\n} from './heading.css';\n\ninterface BASE_HEADING_PROPS {\n  className?: string;\n\n  font?: HeadingFontFamily;\n  size?: HeadingSize;\n  weight?: HeadingWeight;\n  align?: HeadingAlignment;\n}\n\ntype HeadingPrimitiveProps = BASE_HEADING_PROPS &\n  HeadingVariantProps &\n  React.HTMLAttributes<HTMLHeadingElement>;\n\nexport type HeadingProps = HeadingPrimitiveProps;\nexport const Heading = React.forwardRef<HTMLHeadingElement, HeadingProps>(\n  (\n    {\n      className,\n      font = 'system',\n      size = 'H1',\n      weight = 'semibold',\n      align = 'left',\n      ...rest\n    },\n    // ..\n    ref,\n  ) => {\n    return (\n      <h1\n        {...rest}\n        ref={ref}\n        className={clsx(className, CSS.heading({ font, size, weight, align }))}\n      />\n    );\n  },\n);\n\nHeading.displayName = 'Heading';\n","import React from 'react';\nimport * as POP from '@radix-ui/react-popover';\nimport * as CSS from './popover.css';\nimport clsx from 'clsx';\n\nconst PopoverRoot = POP.Root;\n\nconst PopoverTrigger = React.forwardRef<\n  React.ElementRef<typeof POP.Trigger>,\n  React.ComponentProps<typeof POP.Trigger>\n>(({ children, className, asChild, ...rest }, ref) => {\n  return (\n    <POP.Trigger\n      {...rest}\n      ref={ref}\n      asChild={asChild}\n      className={clsx(CSS.popoverTrigger, className)}>\n      {children}\n    </POP.Trigger>\n  );\n});\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof POP.Content>,\n  React.ComponentProps<typeof POP.Content>\n>(\n  (\n    {\n      children,\n      className,\n      align = 'center',\n      sideOffset = 10,\n      sticky = 'partial',\n      side = 'bottom',\n      onInteractOutside,\n      ...props\n    },\n    forwardedRef,\n  ) => {\n    return (\n      <POP.Content\n        {...props}\n        ref={forwardedRef}\n        align={align}\n        sideOffset={sideOffset}\n        sticky={sticky}\n        onInteractOutside={onInteractOutside}\n        side={side}\n        className={clsx(CSS.popoverContent, className)}>\n        {children}\n      </POP.Content>\n    );\n  },\n);\n\nconst PopoverClose = React.forwardRef<\n  React.ElementRef<typeof POP.Close>,\n  React.ComponentPropsWithoutRef<typeof POP.Close>\n>(({ children, className, asChild, ...props }, ref) => {\n  return (\n    <POP.Close\n      {...props}\n      ref={ref}\n      asChild={asChild}\n      className={clsx(CSS.popoverClose, className)}>\n      {children}\n    </POP.Close>\n  );\n});\n\n/** ----------------------------------------- */\nexport type PopoverTriggerProps = React.ComponentProps<typeof PopoverTrigger>;\nexport type PopoverContentProps = React.ComponentProps<typeof PopoverContent>;\nexport type PopoverProps = React.ComponentProps<typeof PopoverRoot>;\n\nexport const Popover: React.FC<PopoverProps> & {\n  Trigger: typeof PopoverTrigger;\n  Content: typeof PopoverContent;\n  //..\n  Anchor: typeof POP.Anchor;\n  Arrow: typeof POP.Arrow;\n  Close: typeof PopoverClose;\n} = (props) => <PopoverRoot {...props} />;\n\nPopover.Trigger = PopoverTrigger;\nPopover.Content = PopoverContent;\nPopover.Anchor = POP.Anchor;\nPopover.Arrow = POP.Arrow;\nPopover.Close = PopoverClose;\n\nPopover.displayName = 'Popover';\nPopover.Trigger.displayName = 'Popover.Trigger';\nPopover.Content.displayName = 'Popover.Content';\nPopover.Anchor.displayName = 'Popover.Anchor';\nPopover.Arrow.displayName = 'Popover.Arrow';\nPopover.Close.displayName = 'Popover.Close';\n","import React from 'react';\nimport clsx from 'clsx';\nimport * as css from './section.css';\nimport {\n  // ..\n  type SectionSize,\n  type SectionVariantProps,\n} from './section.css';\n\ninterface BASE_SECTION_PROPS {\n  children: React.ReactNode;\n  className?: string;\n  size?: SectionSize;\n}\n\nexport type SectionProps = BASE_SECTION_PROPS &\n  SectionVariantProps &\n  React.HTMLAttributes<HTMLDivElement>;\n\nexport const Section: React.FC<SectionProps> = ({\n  children,\n  className,\n  size = 'vw',\n  ...rest\n}) => {\n  return (\n    <div\n      {...rest}\n      className={clsx(className, css.section({ size }))}>\n      {children}\n    </div>\n  );\n};\n\nSection.displayName = 'Section';\n","import React, { forwardRef } from 'react';\nimport { space as createSpace, type SpaceSizeProps } from './space.css';\n\ninterface SpaceProps extends React.HTMLAttributes<HTMLDivElement> {\n  className?: string;\n  size?: SpaceSizeProps;\n}\n\nexport const Space = forwardRef<HTMLDivElement, SpaceProps>(\n  ({ size = 'sm', className, ...props }, forwardedRef) => {\n    const spaceClassName = createSpace({ size });\n\n    return (\n      <div\n        {...props}\n        ref={forwardedRef}\n        className={\n          className ? `${className} ${spaceClassName}` : spaceClassName\n        }\n      />\n    );\n  },\n);\n\nSpace.displayName = 'Space';\n\nexport type { SpaceProps };\n","import * as React from 'react';\n\nimport {\n  type OptionalResponsiveObject,\n  type OptionalResponsiveValue,\n  mapResponsiveValue,\n} from '../../lib';\nimport { type ReactNodeNoStrings } from '../@utils/utils';\nimport { Rect, type DivProps } from '../rect';\n\nexport type Direction = 'horizontal' | 'vertical';\nexport type Wrap = 1 | 0;\n\nconst wrapToFlexWrapLookup = {\n  1: 'wrap',\n  0: 'nowrap',\n} as const;\n\nconst directionToFlexDirectionLookup = {\n  horizontal: 'row',\n  vertical: 'column',\n} as const;\n\nexport const directionToFlexDirection = (\n  direction: OptionalResponsiveValue<Direction> | undefined,\n) =>\n  direction\n    ? mapResponsiveValue(\n        direction,\n        (value) => directionToFlexDirectionLookup[value],\n      )\n    : undefined;\n\nexport const wrapToFlexWrap = (\n  wrap: OptionalResponsiveObject<true | false> | undefined,\n) =>\n  wrap\n    ? typeof wrap === 'boolean'\n      ? wrapToFlexWrapLookup[1]\n      : mapResponsiveValue(\n          wrap as any,\n          // Hack to convert boolean to number since Sprinkles does not support\n          // boolean responsive keys\n          (value) => wrapToFlexWrapLookup[+value as Wrap],\n        )\n    : undefined;\n\n/** ------------------------------------------- */\n\nexport const validStackComponents = [\n  'a',\n  'article',\n  'div',\n  'form',\n  'header',\n  'label',\n  'li',\n  'main',\n  'section',\n  'span',\n] as const;\n\nexport type StackProps = {\n  as?: (typeof validStackComponents)[number];\n  align?: DivProps['alignItems'];\n  children: ReactNodeNoStrings;\n  direction?: OptionalResponsiveValue<Direction>;\n  flex?: DivProps['flex'];\n  justify?: DivProps['justifyContent'];\n  space?: DivProps['gap'];\n  wrap?: OptionalResponsiveObject<true | false>;\n};\n\nexport const Stack = ({\n  as = 'div',\n  align,\n  children,\n  justify,\n  flex,\n  direction = 'vertical',\n  space = '4px 4px',\n  wrap,\n}: React.PropsWithChildren<StackProps>) => {\n  const flexDirection = directionToFlexDirection(direction);\n  const flexWrap = wrapToFlexWrap(wrap);\n  return (\n    <Rect\n      alignItems={align}\n      as={as}\n      display='flex'\n      flex={flex}\n      flexDirection={flexDirection}\n      flexWrap={flexWrap}\n      gap={space}\n      justifyContent={justify}>\n      {children}\n    </Rect>\n  );\n};\n","import React, { forwardRef, type ElementRef } from 'react';\nimport * as SWI from '@radix-ui/react-switch';\nimport { switchToggle, switchRoot } from './switch.css';\nimport clsx from 'clsx';\n\nimport {\n  type SwitchRootVariantProps,\n  type SwitchToggleVariantProps,\n} from './switch.css';\n\ninterface BASE_SWITCH_PROPS {\n  className?: string;\n  asChild?: boolean;\n  /**\n   *\n   * The state of the switch when it is\n   * initially rendered.\n   * Use when you do not need to control its state.\n   */\n  defaultChecked?: boolean;\n  /**\n   *\n   * The controlled state of the switch.\n   * Must be used in conjunction with onCheckedChange.\n   */\n  checked?: boolean;\n  /**\n   *\n   * Event handler called when\n   * the state of the switch changes.\n   */\n  onCheckedChange?: (checked: boolean) => void;\n  /**\n   *\n   * If true, prevents the user\n   * from interacting with the switch.\n   */\n  disabled?: boolean;\n  /**\n   *\n   * If true, indicates that the user must\n   * check the switch before the owning\n   * form can be submitted.\n   */\n  required?: boolean;\n  /**\n   *\n   * The name of the switch.\n   * Submitted with its owning form\n   * as part of a name/value pair.\n   */\n  name?: string;\n  /**\n   *\n   * The value given as data\n   * when submitted with a name.\n   */\n  value?: string;\n\n  size?: 'small' | 'medium';\n}\n\nexport type SwitchProps = BASE_SWITCH_PROPS &\n  SwitchRootVariantProps &\n  React.ComponentProps<typeof SWI.Root>;\nconst SwitchRootComponent: React.FC<SwitchProps> = ({\n  className,\n  asChild,\n  defaultChecked,\n  checked,\n  onCheckedChange,\n  disabled,\n  required,\n  name,\n  value,\n  size = 'small',\n  ...rest\n}) => {\n  return (\n    <SWI.Root\n      {...rest}\n      asChild={asChild}\n      className={clsx(className, switchRoot({ size }))}\n      defaultChecked={defaultChecked}\n      checked={checked}\n      onCheckedChange={onCheckedChange}\n      disabled={disabled}\n      required={required}\n      name={name}\n      value={value}\n    />\n  );\n};\n\n/**\n * --------------------------------------------\n * [SwitchToggleVariantProps]\n * holds the props (size) and (variant) for the ToggleComponent.\n */\nexport type ToggleProps = SwitchToggleVariantProps &\n  React.ComponentProps<typeof SWI.Thumb>;\n\nconst SwitchToggleComponent = forwardRef<\n  ElementRef<typeof SWI.Thumb>,\n  ToggleProps\n>((props, ref) => {\n  const { className, size = 'small', asChild = false, ...rest } = props;\n\n  return (\n    <SWI.Thumb\n      {...rest}\n      ref={ref}\n      asChild={asChild}\n      className={clsx(className, switchToggle({ size }))}\n    />\n  );\n});\n\n/** ------------------- exports ------------------------- */\n\nexport const Switch: React.FC<SwitchProps> & {\n  Toggle: typeof SwitchToggleComponent;\n} = (props) => <SwitchRootComponent {...props} />;\n\nSwitch.Toggle = SwitchToggleComponent;\n\nSwitch.displayName = 'Switch';\nSwitch.Toggle.displayName = 'Switch.Toggle';\nSwitchToggleComponent.displayName = 'Switch.Toggle';\n","import React from 'react';\nimport { text } from './text.css';\nimport clsx from 'clsx';\n\nimport type {\n  TextFontVariants,\n  TextSizeVariants,\n  TextAlignVariants,\n  TextWeightVariants,\n  TextColorVariants,\n  TextCasingVariants,\n  TextVariantProps,\n} from './text.css';\n\ninterface BASE_TEXT_PROPS {\n  children?: React.ReactNode;\n  className?: string;\n  font?: TextFontVariants;\n  size?: TextSizeVariants;\n  align?: TextAlignVariants;\n  weight?: TextWeightVariants;\n  color?: TextColorVariants;\n  casing?: TextCasingVariants;\n}\n\nexport type TextProps = BASE_TEXT_PROPS &\n  TextVariantProps &\n  React.HTMLAttributes<HTMLParagraphElement>;\nexport const Text = React.forwardRef<HTMLParagraphElement, TextProps>(\n  (\n    {\n      children,\n      className,\n      font = 'inter',\n      size = 'md',\n      align = 'left',\n      weight = 'medium',\n      color = 'current',\n      casing,\n      ...props\n    },\n    forwardedRef,\n  ) => {\n    return (\n      <p\n        ref={forwardedRef}\n        className={clsx(\n          className,\n          text({ font, size, align, weight, color, casing }),\n        )}\n        {...props}>\n        {children}\n      </p>\n    );\n  },\n);\n\nText.displayName = 'Text';\n"],"names":["KitContext","createContext","useTheme","context","useContext","KitProvider","children","kitTheme","setTheme","useState","toggleTheme","prevTheme","Mode","themes","jsx","r","e","t","f","n","clsx","addFunctionSerializer","target","recipe","addRecipe","createNormalizeValueFn","properties","conditions","normalizeValue","value","returnValue","index","createMapValueFn","mapValue","mapFn","normalizedObject","mappedObject","_key","_toPrimitive","input","hint","prim","res","_toPropertyKey","arg","key","_defineProperty","obj","ownKeys","object","enumerableOnly","keys","symbols","sym","_objectSpread2","i","source","createSprinkles","composeStyles","_len","args","sprinklesStyles","a","sprinklesKeys","shorthandNames","property","sprinklesFn","props","classNames","shorthands","nonShorthands","hasShorthands","shorthand","sprinkle","propMapping","finalProps","_loop","propValue","prop","responsiveIndex","responsiveValue","conditionName","_conditionName","_value","SprinklesError","message","format","invalidPropValue","possibleValues","breakpointCount","_responsiveValue","_conditionName2","_value2","_ret","classList","createSprinkles$1","atoms","reset","rest","sprinklesClasses","sprinkles","resetClass","styleRes.base","styleRes.element","breakpoints","colorModeSelectors","makeSelector","mode","styles","colorModeStyle","lightMode","darkMode","shouldApplyCompound","compoundCheck","selections","defaultVariants","_selections$key","createRuntimeFn","config","runtimeFn","options","className","variantName","_selections$variantNa","variantSelection","selection","selectionClassName","compoundClassName","Banner","size","variant","border","css.banner","Button","type","as","onClick","href","rel","handleClick","event","button","Canvas","React","forwardedRef","canvas","Chip","shape","chip","Container","width","align","container","Flex","direction","justify","gap","css.flex","getVarName","variable","matches","get","path","result","walkObject","fn","clone","currentPath","assignInlineVars","varsOrContract","tokens","_contract","varName","_vars","Rect","forwardRef","ref","atomProps","nativeProps","atomicClasses","createElement","Box","Grid","gridItemMinWidth","gridMaxRowItems","style","styles.grid","styles.gridItemMinWidth","styles.gridMaxRowItems","Children","Heading","font","weight","CSS.heading","PopoverRoot","POP","PopoverTrigger","asChild","CSS.popoverTrigger","PopoverContent","sideOffset","sticky","side","onInteractOutside","CSS.popoverContent","PopoverClose","CSS.popoverClose","Popover","Section","css.section","Space","spaceClassName","createSpace","wrapToFlexWrapLookup","directionToFlexDirectionLookup","directionToFlexDirection","mapResponsiveValue","wrapToFlexWrap","wrap","Stack","flex","space","flexDirection","flexWrap","SwitchRootComponent","defaultChecked","checked","onCheckedChange","disabled","required","name","SWI","switchRoot","SwitchToggleComponent","switchToggle","Switch","Text","color","casing","text"],"mappings":"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","x_google_ignoreList":[2,3,4,5,6,7,11,18,19]}